<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:webfeeds="http://webfeeds.org/rss/1.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>sharperM</title>
    <link>https://sharperM.GitHub.io/zh-cn/</link>
    <description>Recent content on sharperM</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 03 Jun 2023 23:10:57 +0800</lastBuildDate>
    
    <atom:link href="https://sharperM.GitHub.io/zh-cn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>關於</title>
      <link>https://sharperM.GitHub.io/zh-cn/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/about/</guid>
      <description>Hugo 是個靜態網頁產生器。 它利用了一些開放原始碼的專案像是： Cobra Viper J Walter Weatherman Cast 了解並貢獻： GitHub.</description>
      <content:encoded><![CDATA[<p>Hugo 是個靜態網頁產生器。</p>
<p>它利用了一些開放原始碼的專案像是：</p>
<ul>
<li><a href="https://github.com/spf13/cobra">Cobra</a></li>
<li><a href="https://github.com/spf13/viper">Viper</a></li>
<li><a href="https://github.com/spf13/jWalterWeatherman">J Walter Weatherman</a></li>
<li><a href="https://github.com/spf13/cast">Cast</a></li>
</ul>
<p>了解並貢獻： <a href="https://github.com/gohugoio">GitHub</a>.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>cs193p-2021-lecture1</title>
      <link>https://sharperM.GitHub.io/zh-cn/2023/06/03/cs193p-2021-lecture1/</link>
      <pubDate>Sat, 03 Jun 2023 23:10:57 +0800</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/2023/06/03/cs193p-2021-lecture1/</guid>
      <description>1.Getting start with swiftUI 1.intro 2.Memorize! 3.xcode 介绍 SwiftUI View var some View 像lego 各个View 组合，嵌套，组成UI 使用函数式编程 ZStack 组合各种view</description>
      <content:encoded><![CDATA[<h1 id="1getting-start-with-swiftui">1.Getting start with swiftUI</h1>
<h2 id="1intro">1.intro</h2>
<h2 id="2memorize">2.Memorize!</h2>
<h2 id="3xcode">3.xcode</h2>
<pre><code>介绍 SwiftUI

View

var 

some View

像lego 各个View 组合，嵌套，组成UI

使用函数式编程

ZStack 组合各种view
</code></pre>
]]></content:encoded>
    </item>
    
    <item>
      <title>cs193p-2021-lecture2</title>
      <link>https://sharperM.GitHub.io/zh-cn/2023/06/03/cs193p-2021-lecture2/</link>
      <pubDate>Sat, 03 Jun 2023 23:10:57 +0800</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/2023/06/03/cs193p-2021-lecture2/</guid>
      <description>cs193p-2021-lecture2 继续写界面 HStack</description>
      <content:encoded><![CDATA[<p>cs193p-2021-lecture2</p>
<p>继续写界面</p>
<p>HStack</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>金科工作回顾</title>
      <link>https://sharperM.GitHub.io/zh-cn/2023/03/23/%E9%87%91%E7%A7%91%E5%B7%A5%E4%BD%9C%E5%9B%9E%E9%A1%BE/</link>
      <pubDate>Thu, 23 Mar 2023 10:46:58 +0800</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/2023/03/23/%E9%87%91%E7%A7%91%E5%B7%A5%E4%BD%9C%E5%9B%9E%E9%A1%BE/</guid>
      <description>金科工作回顾 开始的11月8日 一’修改lua 直译 ts 的脚本错误。 其实就是将lua的定义的静态函数 改成class，改成单例，改成creator的组</description>
      <content:encoded><![CDATA[<p>金科工作回顾</p>
<p>开始的11月8日</p>
<h2 id="一修改lua-直译-ts-的脚本错误">一’修改lua 直译 ts 的脚本错误。</h2>
<p>其实就是将lua的定义的静态函数</p>
<p>改成class，改成单例，改成creator的组件</p>
<p>lua的内置函数改成 ts，js的实现</p>
<pre><code>例如
math，random，string, table, ipairs, pair, concat, clone,
</code></pre>
<p>lua的table从1开始索引的。</p>
<pre><code>a = b || c ，
a = b &amp;&amp; c || d，
random(n) 返回是 [1,n]的随机数
</code></pre>
<p>原本的cocos2dx-lua 3.17 的成员</p>
<p>不同的回调函数</p>
<pre><code>onEnter
onEnterFinsh
onExit
</code></pre>
<p>例如sprite， node， lable， widget， layer，</p>
<p>写一个适配层 wrap 来 转成，  creator 的 组件。</p>
<p>这里要解决的是
2dx 的 绘制顺序，2d游戏的遮挡，和 creator 的绘制顺序不一样。</p>
<p>还有canva 的坐标，会代替 cocos2dx的屏幕坐标问题。</p>
<p>函数接口实现</p>
<p>UI类和ui组件的差异，</p>
<p>还有一些ui组件自带的缓动效果（例如scrolliew的回弹效果，就不能对intercontainer 做位置相关的缓动，会冲突）。</p>
<h2 id="资源加载引起的异步问题">资源加载引起的异步问题</h2>
<p>要处理通过程序代码动态创建的界面需要获得图片的尺寸才能设置位置。这个是应该避免的，应该每一个图片都是固定“显示大小“，图片资源加载之后才根据实际大小缩放到“显示大小“，避免等待图片加载的情况。</p>
<h2 id="播放动画引起的异步">播放动画引起的异步</h2>
<p>还有一些，spine动画加载，然后在播放动画之后，执行回调的，回调的应该是管理类，不能是界面。避免动画的播放的过程中，回调涉及的界面已经被销毁。其中也是涉及到如何分离 逻辑和界面的问题，因为最终管理类可能也是要影响界面的。</p>
<p>建议是通过消息队列，设计一个安全的消息分发类
（弱引用）</p>
<p>网络消息引起的异步问题，也是和上面的类似</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>C&#43;&#43;11 的线程  join()函数</title>
      <link>https://sharperM.GitHub.io/zh-cn/2023/03/07/c-11-%E7%9A%84%E7%BA%BF%E7%A8%8B-join%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 07 Mar 2023 23:02:32 +0800</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/2023/03/07/c-11-%E7%9A%84%E7%BA%BF%E7%A8%8B-join%E5%87%BD%E6%95%B0/</guid>
      <description>// thread example1.cpp #include &amp;lt;iostream&amp;gt; // std::cout #include &amp;lt;thread&amp;gt; // std::thread void foo() { std::cout &amp;lt;&amp;lt; &amp;#34;foo is called&amp;#34; &amp;lt;&amp;lt; std::endl; } void bar(int x) { std::cout &amp;lt;&amp;lt; &amp;#34;bar is called&amp;#34; &amp;lt;&amp;lt; std::endl; } int main() { std::thread first (foo); // spawn new thread that calls foo() std::thread second (bar,0); // spawn new thread that calls bar(0) std::cout &amp;lt;&amp;lt; &amp;#34;main, foo and bar now execute concurrently...\n&amp;#34;; // synchronize threads: first.join();</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;display:grid;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">// thread example1.cpp
</span></span></span><span style="display:flex; background-color:#3c3d38"><span><span style="color:#75715e"></span><span style="color:#75715e">#include</span>  <span style="color:#75715e">&lt;iostream&gt;        // std::cout</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span>  <span style="color:#75715e">&lt;thread&gt;        // std::thread</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">foo</span>()  {
</span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;foo is called&#34;</span> <span style="color:#f92672">&lt;&lt;</span> std<span style="color:#f92672">::</span>endl;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">bar</span>(<span style="color:#66d9ef">int</span> x) {
</span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;bar is called&#34;</span> <span style="color:#f92672">&lt;&lt;</span> std<span style="color:#f92672">::</span>endl;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span><span style="color:#66d9ef">thread</span> first (foo);    <span style="color:#75715e">// spawn new thread that calls foo()
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    std<span style="color:#f92672">::</span><span style="color:#66d9ef">thread</span> second (bar,<span style="color:#ae81ff">0</span>);  <span style="color:#75715e">// spawn new thread that calls bar(0)                                                 
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;main, foo and bar now execute concurrently...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">// synchronize threads:
</span></span></span><span style="display:flex; background-color:#3c3d38"><span><span style="color:#75715e"></span>    first.join();                <span style="color:#75715e">// pauses until first finishes
</span></span></span><span style="display:flex; background-color:#3c3d38"><span><span style="color:#75715e"></span>    second.join();              <span style="color:#75715e">// pauses until second finishes
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;foo and bar completed.</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>使用下面的命令编译</p>
<pre><code>g++ -std=c++11 example1.cpp -lpthread -o example1                                
</code></pre>
<p>运行输出</p>
<pre><code>foo is called
bar is called
main, foo and bar now execute concurrently...
foo and bar completed.
</code></pre>
<p>或者</p>
<pre><code>main, foo and bar now execute concurrently...
bar is called
foo is called
foo and bar completed.
</code></pre>
<p>只有 join之后的代码顺序是确保的</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/w7Ft2ymGmfc?autoplay=1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

]]></content:encoded>
    </item>
    
    <item>
      <title>C&#43;&#43;11 的线程  join()函数</title>
      <link>https://sharperM.GitHub.io/zh-cn/2023/03/07/c-11-%E7%9A%84%E7%BA%BF%E7%A8%8B-join%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 07 Mar 2023 23:02:32 +0800</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/2023/03/07/c-11-%E7%9A%84%E7%BA%BF%E7%A8%8B-join%E5%87%BD%E6%95%B0/</guid>
      <description>// constructing threads #include &amp;lt;iostream&amp;gt; // std::cout #include &amp;lt;atomic&amp;gt; // std::atomic #include &amp;lt;thread&amp;gt; // std::thread #include &amp;lt;vector&amp;gt; // std::vector std::atomic&amp;lt;int&amp;gt; global_counter (0); void increase_global (int n) { for (int i=0; i&amp;lt;n; ++i) ++global_counter; } void increase_reference (std::atomic&amp;lt;int&amp;gt;&amp;amp; variable, int n) { for (int i=0; i&amp;lt;n; ++i) ++variable; } struct C : std::atomic&amp;lt;int&amp;gt; { C() : std::atomic&amp;lt;int&amp;gt;(0) {} void increase_member (int n) { for (int i=0; i&amp;lt;n; ++i) fetch_add(1); } };</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;display:grid;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>
</span></span><span style="display:flex; background-color:#3c3d38"><span><span style="color:#75715e">// constructing threads
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;iostream&gt;       // std::cout</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;atomic&gt;         // std::atomic</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;thread&gt;         // std::thread</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;vector&gt;         // std::vector</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span>std<span style="color:#f92672">::</span>atomic<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">int</span><span style="color:#f92672">&gt;</span> global_counter (<span style="color:#ae81ff">0</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">increase_global</span> (<span style="color:#66d9ef">int</span> n) { <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>; i<span style="color:#f92672">&lt;</span>n; <span style="color:#f92672">++</span>i) <span style="color:#f92672">++</span>global_counter; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">increase_reference</span> (std<span style="color:#f92672">::</span>atomic<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">int</span><span style="color:#f92672">&gt;&amp;</span> variable, <span style="color:#66d9ef">int</span> n) { <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>;   i<span style="color:#f92672">&lt;</span>n; <span style="color:#f92672">++</span>i) <span style="color:#f92672">++</span>variable; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">C</span> <span style="color:#f92672">:</span> std<span style="color:#f92672">::</span>atomic<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">int</span><span style="color:#f92672">&gt;</span> {
</span></span><span style="display:flex;"><span>  C() <span style="color:#f92672">:</span> std<span style="color:#f92672">::</span>atomic<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">int</span><span style="color:#f92672">&gt;</span>(<span style="color:#ae81ff">0</span>) {}
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">void</span> <span style="color:#a6e22e">increase_member</span> (<span style="color:#66d9ef">int</span> n) { <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>; i<span style="color:#f92672">&lt;</span>n; <span style="color:#f92672">++</span>i) fetch_add(<span style="color:#ae81ff">1</span>); }
</span></span><span style="display:flex; background-color:#3c3d38"><span>};
</span></span><span style="display:flex; background-color:#3c3d38"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span> ()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>vector<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span><span style="color:#66d9ef">thread</span><span style="color:#f92672">&gt;</span> threads;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;increase global counter with 10 threads...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>; i<span style="color:#f92672">&lt;=</span><span style="color:#ae81ff">10</span>; <span style="color:#f92672">++</span>i)
</span></span><span style="display:flex;"><span>    threads.push_back(std<span style="color:#f92672">::</span><span style="color:#66d9ef">thread</span>(increase_global,<span style="color:#ae81ff">1000</span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;increase counter (foo) with 10 threads using   reference...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>atomic<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">int</span><span style="color:#f92672">&gt;</span> foo(<span style="color:#ae81ff">0</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>; i<span style="color:#f92672">&lt;=</span><span style="color:#ae81ff">10</span>; <span style="color:#f92672">++</span>i)
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>      threads.push_back(std<span style="color:#f92672">::</span><span style="color:#66d9ef">thread</span>(increase_reference,std<span style="color:#f92672">::</span>ref(foo),<span style="color:#ae81ff">1000</span>));  
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;increase counter (bar) with 10 threads using member...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>  C bar;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>; i<span style="color:#f92672">&lt;=</span><span style="color:#ae81ff">10</span>; <span style="color:#f92672">++</span>i)
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">//threads.push_back(std::thread(&amp;C::increase_member,std::ref(bar) ,1000));  //原来语法有错误
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	  threads.push_back(std<span style="color:#f92672">::</span><span style="color:#66d9ef">thread</span>([<span style="color:#f92672">&amp;</span>bar](){bar.increase_member(<span style="color:#ae81ff">1000</span>);}));
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;synchronizing all threads...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">auto</span><span style="color:#f92672">&amp;</span> th : threads) th.join();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;global_counter: &#34;</span> <span style="color:#f92672">&lt;&lt;</span> global_counter <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;\n&#39;</span>;
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;foo: &#34;</span> <span style="color:#f92672">&lt;&lt;</span> foo <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;\n&#39;</span>;
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;bar: &#34;</span> <span style="color:#f92672">&lt;&lt;</span> bar <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;\n&#39;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>运行输出</p>
<pre><code>increase global counter with 10 threads...
increase counter (foo) with 10 threads using   reference...
increase counter (bar) with 10 threads using member...
synchronizing all threads...
global_counter: 10000
foo: 10000
bar: 10000
</code></pre>
<p>原子值std::atomic</p>
<p>join</p>
<p>同步synchronizing</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>C&#43;&#43;11 的线程  join()函数</title>
      <link>https://sharperM.GitHub.io/zh-cn/2023/03/07/c-11-%E7%9A%84%E7%BA%BF%E7%A8%8B-join%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 07 Mar 2023 23:02:32 +0800</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/2023/03/07/c-11-%E7%9A%84%E7%BA%BF%E7%A8%8B-join%E5%87%BD%E6%95%B0/</guid>
      <description>// example for thread::operator= #include &amp;lt;iostream&amp;gt; // std::cout #include &amp;lt;thread&amp;gt; // std::thread, std::this_thread::sleep_for #include &amp;lt;chrono&amp;gt; // std::chrono::seconds void pause_thread(int n) { std::this_thread::sleep_for (std::chrono::seconds(n)); std::cout &amp;lt;&amp;lt; &amp;#34;pause of &amp;#34; &amp;lt;&amp;lt; n &amp;lt;&amp;lt; &amp;#34; seconds ended\n&amp;#34;; } int main() { std::thread threads[5]; // default-constructed threads std::cout &amp;lt;&amp;lt; &amp;#34;Spawning 5 threads...\n&amp;#34;; for (int i=0; i&amp;lt;5; ++i) threads[i] = std::thread(pause_thread,i+1); // move-assign threads std::cout &amp;lt;&amp;lt; &amp;#34;Done spawning threads. Now waiting for them to join:\n&amp;#34;;</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">// example for thread::operator=
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;iostream&gt;       // std::cout</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;thread&gt;         // std::thread, std::this_thread::sleep_for</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;chrono&gt;         // std::chrono::seconds</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">pause_thread</span>(<span style="color:#66d9ef">int</span> n) 
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>this_thread<span style="color:#f92672">::</span>sleep_for (std<span style="color:#f92672">::</span>chrono<span style="color:#f92672">::</span>seconds(n));
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;pause of &#34;</span> <span style="color:#f92672">&lt;&lt;</span> n <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34; seconds ended</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>() 
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span><span style="color:#66d9ef">thread</span> threads[<span style="color:#ae81ff">5</span>];                         <span style="color:#75715e">// default-constructed threads
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;Spawning 5 threads...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>; i<span style="color:#f92672">&lt;</span><span style="color:#ae81ff">5</span>; <span style="color:#f92672">++</span>i)
</span></span><span style="display:flex;"><span>    threads[i] <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span><span style="color:#66d9ef">thread</span>(pause_thread,i<span style="color:#f92672">+</span><span style="color:#ae81ff">1</span>);   <span style="color:#75715e">// move-assign threads
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;Done spawning threads. Now waiting for them to join:</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>; i<span style="color:#f92672">&lt;</span><span style="color:#ae81ff">5</span>; <span style="color:#f92672">++</span>i)
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span>i<span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34; joined!</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>    threads[i].join();
</span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span>i<span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34; joined!</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;All threads joined!</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>运行结果</p>
<pre><code>Spawning 5 threads...
Done spawning threads. Now waiting for them to join:
0 joined!
pause of 1 seconds ended
0 joined!
1 joined!
pause of 2 seconds ended
1 joined!
2 joined!
pause of 3 seconds ended
2 joined!
3 joined!
pause of 4 seconds ended
3 joined!
4 joined!
pause of 5 seconds ended
4 joined!
All threads joined!
</code></pre>
<p>join是阻塞的</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>力港1</title>
      <link>https://sharperM.GitHub.io/zh-cn/2023/03/06/%E5%8A%9B%E6%B8%AF1/</link>
      <pubDate>Mon, 06 Mar 2023 20:11:04 +0800</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/2023/03/06/%E5%8A%9B%E6%B8%AF1/</guid>
      <description></description>
      <content:encoded><![CDATA[]]></content:encoded>
    </item>
    
    <item>
      <title>lua 轉 typescript 錯誤</title>
      <link>https://sharperM.GitHub.io/zh-cn/2023/03/06/lua-%E8%BD%89-typescript-%E9%8C%AF%E8%AA%A4/</link>
      <pubDate>Mon, 06 Mar 2023 20:10:57 +0800</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/2023/03/06/lua-%E8%BD%89-typescript-%E9%8C%AF%E8%AA%A4/</guid>
      <description>金科工作業務2 lua 轉 typescript 錯誤 整理 1. 數組從1開始 正则表达式 \[([1|2|3|4|5|6|7|8])\] [$1-1] 2. for 循環 //还是是否从1开始 for 3. 三元運算符 value = condition and a or b //當a 等於 0 或者 是 false 的時候</description>
      <content:encoded><![CDATA[<pre><code>金科工作業務2
</code></pre>
<h1 id="lua-轉-typescript-錯誤-整理">lua 轉 typescript 錯誤 整理</h1>
<hr>
<h2 id="1-數組從1開始">1. 數組從1開始</h2>
<pre><code>正则表达式

\[([1|2|3|4|5|6|7|8])\]

[$1-1]
</code></pre>
<h2 id="2-for-循環">2. for 循環</h2>
<pre><code>//还是是否从1开始
for 
</code></pre>
<h2 id="3-三元運算符">3. 三元運算符</h2>
<pre><code>value = condition and a or b
//當a 等於 0 或者 是 false 的時候 value 不会赋值成 0 或 false
//要改成 
value = condition ? a : b

//类似的
value = a or b
//改成
value = a != undefined ? a : b
</code></pre>
<p>正则查找替换</p>
<pre><code>(.*?)&amp;&amp;(.*?)\|\|(.*)

$1?$2:$3

(.*?)\|\|(.*)
</code></pre>
<h2 id="4-mathrandomx">4. math.random(x)</h2>
<pre><code>x是整數，返回的 是 [1,x]的整數
</code></pre>
<h2 id="5-stringformat">5. string.format</h2>
<pre><code>是類似c的實現，而typescript不是
</code></pre>
<h2 id="6-cc_2dxlabel字体换行">6. cc_2dx.Label字体换行</h2>
<pre><code>t_label.label.overflow = Label.Overflow.RESIZE_HEIGHT
t_label.label.updateRenderData(true)</code></pre>
]]></content:encoded>
    </item>
    
    <item>
      <title>標頭圖片</title>
      <link>https://sharperM.GitHub.io/zh-cn/2018/03/05/%E6%A8%99%E9%A0%AD%E5%9C%96%E7%89%87/</link>
      <pubDate>Mon, 05 Mar 2018 16:01:23 +0800</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/2018/03/05/%E6%A8%99%E9%A0%AD%E5%9C%96%E7%89%87/</guid>
      <description>這是一個簡單的筆記。</description>
      <content:encoded><![CDATA[<p>這是一個簡單的筆記。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://sharperM.GitHub.io/zh-cn/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/1/01/01/</guid>
      <description>1.学习 jetpack compose 的基本使用 compose 的 fundamental 是 composable function，这个 function 会返回一个 UI tree，这个 UI tree 会被 compose runtime 转换成一个 UI tree，然后被渲染到屏幕上。 ROW Column</description>
      <content:encoded><![CDATA[<p>1.学习 jetpack compose 的基本使用</p>
<p>compose 的 fundamental 是 composable function，这个 function 会返回一个 UI tree，这个 UI tree 会被 compose runtime 转换成一个 UI tree，然后被渲染到屏幕上。</p>
<p>ROW
Column
Box
Scaffold</p>
]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://sharperM.GitHub.io/zh-cn/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/1/01/01/</guid>
      <description>cwebp 压缩命令 示例 .\cwebp.exe -q 50 -lossless C:\Users\soldi\Desktop\youmieyou\codeup\FakePage-Sample\immutable\app\src\main\assets\place\01.jpeg -o C:\Users\soldi\Desktop\youmieyou\codeup\FakePage-Sample\immutable\app\src\main\assets\place\01.webp .\cwebp.exe -q 50 C:\Users\soldi\Desktop\youmieyou\codeup\FakePage-Sample\immutable\app\src\main\assets\place\01.jpeg -o C:\Users\soldi\Desktop\youmieyou\codeup\FakePage-Sample\immutable\app\src\main\assets\place\01.webp 科幻电影中的科学 ：科学家奶爸的宇宙手绘 新华字典第12版 《小屁孩成长记做最好的自己》</description>
      <content:encoded><![CDATA[<p>cwebp 压缩命令 示例</p>
<p>.\cwebp.exe -q 50 -lossless C:\Users\soldi\Desktop\youmieyou\codeup\FakePage-Sample\immutable\app\src\main\assets\place\01.jpeg -o C:\Users\soldi\Desktop\youmieyou\codeup\FakePage-Sample\immutable\app\src\main\assets\place\01.webp</p>
<p>.\cwebp.exe -q 50 C:\Users\soldi\Desktop\youmieyou\codeup\FakePage-Sample\immutable\app\src\main\assets\place\01.jpeg -o C:\Users\soldi\Desktop\youmieyou\codeup\FakePage-Sample\immutable\app\src\main\assets\place\01.webp</p>
<p>科幻电影中的科学 ：科学家奶爸的宇宙手绘</p>
<p>新华字典第12版</p>
<p>《小屁孩成长记做最好的自己》</p>
]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://sharperM.GitHub.io/zh-cn/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/1/01/01/</guid>
      <description>消消乐 git@codeup_2:64089bfe56067d3aad3e0e4c/cocos_creator_project/xiaoxiaole.git 假页面2 git@codeup_2:64089bfe56067d3aad3e0e4c/FakeHotelIndex.git 假页面地址 git git@codeup_2:64089bfe56067d3aad3e0e4c/FakePage-Sample.git https https://codeup.aliyun.com/64089bfe56067d3aad3e0e4c/FakePage-Sample.git 我的blog git@github.com:sharperM/msp_blog.git 常用命令 1.添加远程仓库 git remote add origin https://codeup.aliyun.com/64089bfe56067d3aad3e0e4c/FakeHotelIndex.git 消消乐git地址 git remote add origin git@codeup_2:64089bfe56067d3aad3e0e4c/cocos_creator_project/xiaoxiaole.git 我的账号 maishaopei@youmieyou.onaliyun.com 搜索多仓库 ssh 配置 编辑</description>
      <content:encoded><![CDATA[<h2 id="消消乐">消消乐</h2>
<pre><code>git@codeup_2:64089bfe56067d3aad3e0e4c/cocos_creator_project/xiaoxiaole.git
</code></pre>
<h2 id="假页面2">假页面2</h2>
<pre><code>git@codeup_2:64089bfe56067d3aad3e0e4c/FakeHotelIndex.git
</code></pre>
<h2 id="假页面地址">假页面地址</h2>
<p>git</p>
<pre><code>git@codeup_2:64089bfe56067d3aad3e0e4c/FakePage-Sample.git
</code></pre>
<p>https</p>
<pre><code>https://codeup.aliyun.com/64089bfe56067d3aad3e0e4c/FakePage-Sample.git
</code></pre>
<h2 id="我的blog">我的blog</h2>
<pre><code>git@github.com:sharperM/msp_blog.git
</code></pre>
<h2 id="常用命令">常用命令</h2>
<h3 id="1添加远程仓库">1.添加远程仓库</h3>
<pre><code>git remote add origin https://codeup.aliyun.com/64089bfe56067d3aad3e0e4c/FakeHotelIndex.git

消消乐git地址
git remote add origin git@codeup_2:64089bfe56067d3aad3e0e4c/cocos_creator_project/xiaoxiaole.git
</code></pre>
<p>我的账号
<a href="mailto:maishaopei@youmieyou.onaliyun.com">maishaopei@youmieyou.onaliyun.com</a></p>
<p>搜索多仓库 ssh 配置</p>
<p>编辑~/.ssh/config 文件</p>
<p>增加</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;"><code class="language-ini" data-lang="ini"><span style="display:flex;"><span>		<span style="color:#75715e">#工作账号</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">Host codeup_1</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">HostName codeup.aliyun.com</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">IdentityFile ~/.ssh/id_rsa</span>
</span></span><span style="display:flex;"><span>		
</span></span><span style="display:flex;"><span>		<span style="color:#75715e">#我的码云账号</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">Host codeup_2</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">HostName codeup.aliyun.com</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">IdentityFile ~/.ssh/id_maishaopei_youmieyou</span>
</span></span></code></pre></div><h3 id="2打包-archive">2.打包 archive</h3>
<p>git archive</p>
<pre><code>git archive --output=111.zip --format=zip HEAD
</code></pre>
<p>git remote add origin <a href="https://codeup.aliyun.com/64089bfe56067d3aad3e0e4c/FakeHotelIndex.git">https://codeup.aliyun.com/64089bfe56067d3aad3e0e4c/FakeHotelIndex.git</a></p>
<p>git@codeup_2:64089bfe56067d3aad3e0e4c/cocos_creator_project/xiaoxiaole.git</p>
<p>假页面2
git@codeup_2:64089bfe56067d3aad3e0e4c/FakeHotelIndex.git</p>
<p>git clone git@codeup_2:64089bfe56067d3aad3e0e4c/FakePage-Sample.git</p>
<p>假页面地址
git clone <a href="https://codeup.aliyun.com/64089bfe56067d3aad3e0e4c/FakePage-Sample.git">https://codeup.aliyun.com/64089bfe56067d3aad3e0e4c/FakePage-Sample.git</a></p>
<p>我的blog
<a href="mailto:git@github.com">git@github.com</a>:sharperM/msp_blog.git</p>
<p>消消乐git地址
git remote add origin git@codeup_2:64089bfe56067d3aad3e0e4c/cocos_creator_project/xiaoxiaole.git</p>
<p><a href="mailto:maishaopei@youmieyou.onaliyun.com">maishaopei@youmieyou.onaliyun.com</a></p>
<p>搜索多仓库 ssh 配置</p>
<p>编辑~/.ssh/config 文件</p>
<p>增加</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;"><code class="language-ini" data-lang="ini"><span style="display:flex;"><span>		<span style="color:#75715e">#工作账号</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">Host codeup_1</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">HostName codeup.aliyun.com</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">IdentityFile ~/.ssh/id_rsa</span>
</span></span><span style="display:flex;"><span>		
</span></span><span style="display:flex;"><span>		<span style="color:#75715e">#我的码云账号</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">Host codeup_2</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">HostName codeup.aliyun.com</span>
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">IdentityFile ~/.ssh/id_maishaopei_youmieyou</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://sharperM.GitHub.io/zh-cn/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/1/01/01/</guid>
      <description>使用导航控制 fragment，而不是用 fragmentManger</description>
      <content:encoded><![CDATA[<p>使用导航控制 fragment，而不是用 fragmentManger</p>
]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://sharperM.GitHub.io/zh-cn/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/1/01/01/</guid>
      <description>Usage: youtube-dl.exe [OPTIONS] URL [URL&amp;hellip;]
Options: General Options: -h, &amp;ndash;help Print this help text and exit &amp;ndash;version Print program version and exit -U, &amp;ndash;update Update this program to latest version. Make sure that you have sufficient permissions (run with sudo if needed) -i, &amp;ndash;ignore-errors Continue on download errors, for example to skip unavailable videos in a playlist &amp;ndash;abort-on-error Abort downloading of further videos (in the playlist or the command line) if an error occurs &amp;ndash;dump-user-agent Display the current browser identification &amp;ndash;list-extractors List all supported extractors &amp;ndash;extractor-descriptions Output descriptions of all supported extractors &amp;ndash;force-generic-extractor Force extraction to use the generic extractor &amp;ndash;default-search PREFIX Use this prefix for unqualified URLs.</description>
      <content:encoded><![CDATA[<p>Usage: youtube-dl.exe [OPTIONS] URL [URL&hellip;]</p>
<p>Options:
General Options:
-h, &ndash;help                           Print this help text and exit
&ndash;version                            Print program version and exit
-U, &ndash;update                         Update this program to latest version. Make sure that you have sufficient
permissions (run with sudo if needed)
-i, &ndash;ignore-errors                  Continue on download errors, for example to skip unavailable videos in a
playlist
&ndash;abort-on-error                     Abort downloading of further videos (in the playlist or the command line) if an
error occurs
&ndash;dump-user-agent                    Display the current browser identification
&ndash;list-extractors                    List all supported extractors
&ndash;extractor-descriptions             Output descriptions of all supported extractors
&ndash;force-generic-extractor            Force extraction to use the generic extractor
&ndash;default-search PREFIX              Use this prefix for unqualified URLs. For example &ldquo;gvsearch2:&rdquo; downloads two
videos from google videos for youtube-dl &ldquo;large apple&rdquo;. Use the value &ldquo;auto&rdquo; to
let youtube-dl guess (&ldquo;auto_warning&rdquo; to emit a warning when guessing). &ldquo;error&rdquo;
just throws an error. The default value &ldquo;fixup_error&rdquo; repairs broken URLs, but
emits an error if this is not possible instead of searching.
&ndash;ignore-config                      Do not read configuration files. When given in the global configuration file
/etc/youtube-dl.conf: Do not read the user configuration in ~/.config/youtube-
dl/config (%APPDATA%/youtube-dl/config.txt on Windows)
&ndash;config-location PATH               Location of the configuration file; either the path to the config or its
containing directory.
&ndash;flat-playlist                      Do not extract the videos of a playlist, only list them.
&ndash;mark-watched                       Mark videos watched (YouTube only)
&ndash;no-mark-watched                    Do not mark videos watched (YouTube only)
&ndash;no-color                           Do not emit color codes in output</p>
<p>Network Options:
&ndash;proxy URL                          Use the specified HTTP/HTTPS/SOCKS proxy. To enable SOCKS proxy, specify a
proper scheme. For example socks5://127.0.0.1:1080/. Pass in an empty string
(&ndash;proxy &ldquo;&rdquo;) for direct connection
&ndash;socket-timeout SECONDS             Time to wait before giving up, in seconds
&ndash;source-address IP                  Client-side IP address to bind to
-4, &ndash;force-ipv4                     Make all connections via IPv4
-6, &ndash;force-ipv6                     Make all connections via IPv6</p>
<p>Geo Restriction:
&ndash;geo-verification-proxy URL         Use this proxy to verify the IP address for some geo-restricted sites. The
default proxy specified by &ndash;proxy (or none, if the option is not present) is
used for the actual downloading.
&ndash;geo-bypass                         Bypass geographic restriction via faking X-Forwarded-For HTTP header
&ndash;no-geo-bypass                      Do not bypass geographic restriction via faking X-Forwarded-For HTTP header
&ndash;geo-bypass-country CODE            Force bypass geographic restriction with explicitly provided two-letter ISO
3166-2 country code
&ndash;geo-bypass-ip-block IP_BLOCK       Force bypass geographic restriction with explicitly provided IP block in CIDR
notation</p>
<p>Video Selection:
&ndash;playlist-start NUMBER              Playlist video to start at (default is 1)
&ndash;playlist-end NUMBER                Playlist video to end at (default is last)
&ndash;playlist-items ITEM_SPEC           Playlist video items to download. Specify indices of the videos in the playlist
separated by commas like: &ldquo;&ndash;playlist-items 1,2,5,8&rdquo; if you want to download
videos indexed 1, 2, 5, 8 in the playlist. You can specify range: &ldquo;&ndash;playlist-
items 1-3,7,10-13&rdquo;, it will download the videos at index 1, 2, 3, 7, 10, 11, 12
and 13.
&ndash;match-title REGEX                  Download only matching titles (regex or caseless sub-string)
&ndash;reject-title REGEX                 Skip download for matching titles (regex or caseless sub-string)
&ndash;max-downloads NUMBER               Abort after downloading NUMBER files
&ndash;min-filesize SIZE                  Do not download any videos smaller than SIZE (e.g. 50k or 44.6m)
&ndash;max-filesize SIZE                  Do not download any videos larger than SIZE (e.g. 50k or 44.6m)
&ndash;date DATE                          Download only videos uploaded in this date
&ndash;datebefore DATE                    Download only videos uploaded on or before this date (i.e. inclusive)
&ndash;dateafter DATE                     Download only videos uploaded on or after this date (i.e. inclusive)
&ndash;min-views COUNT                    Do not download any videos with less than COUNT views
&ndash;max-views COUNT                    Do not download any videos with more than COUNT views
&ndash;match-filter FILTER                Generic video filter. Specify any key (see the &ldquo;OUTPUT TEMPLATE&rdquo; for a list of
available keys) to match if the key is present, !key to check if the key is not
present, key &gt; NUMBER (like &ldquo;comment_count &gt; 12&rdquo;, also works with &gt;=, &lt;, &lt;=,
!=, =) to compare against a number, key = &lsquo;LITERAL&rsquo; (like &ldquo;uploader = &lsquo;Mike
Smith&rsquo;&rdquo;, also works with !=) to match against a string literal and &amp; to require
multiple matches. Values which are not known are excluded unless you put a
question mark (?) after the operator. For example, to only match videos that
have been liked more than 100 times and disliked less than 50 times (or the
dislike functionality is not available at the given service), but who also have
a description, use &ndash;match-filter &ldquo;like_count &gt; 100 &amp; dislike_count &lt;? 50 &amp;
description&rdquo; .
&ndash;no-playlist                        Download only the video, if the URL refers to a video and a playlist.
&ndash;yes-playlist                       Download the playlist, if the URL refers to a video and a playlist.
&ndash;age-limit YEARS                    Download only videos suitable for the given age
&ndash;download-archive FILE              Download only videos not listed in the archive file. Record the IDs of all
downloaded videos in it.
&ndash;include-ads                        Download advertisements as well (experimental)</p>
<p>Download Options:
-r, &ndash;limit-rate RATE                Maximum download rate in bytes per second (e.g. 50K or 4.2M)
-R, &ndash;retries RETRIES                Number of retries (default is 10), or &ldquo;infinite&rdquo;.
&ndash;fragment-retries RETRIES           Number of retries for a fragment (default is 10), or &ldquo;infinite&rdquo; (DASH,
hlsnative and ISM)
&ndash;skip-unavailable-fragments         Skip unavailable fragments (DASH, hlsnative and ISM)
&ndash;abort-on-unavailable-fragment      Abort downloading when some fragment is not available
&ndash;keep-fragments                     Keep downloaded fragments on disk after downloading is finished; fragments are
erased by default
&ndash;buffer-size SIZE                   Size of download buffer (e.g. 1024 or 16K) (default is 1024)
&ndash;no-resize-buffer                   Do not automatically adjust the buffer size. By default, the buffer size is
automatically resized from an initial value of SIZE.
&ndash;http-chunk-size SIZE               Size of a chunk for chunk-based HTTP downloading (e.g. 10485760 or 10M)
(default is disabled). May be useful for bypassing bandwidth throttling imposed
by a webserver (experimental)
&ndash;playlist-reverse                   Download playlist videos in reverse order
&ndash;playlist-random                    Download playlist videos in random order
&ndash;xattr-set-filesize                 Set file xattribute ytdl.filesize with expected file size
&ndash;hls-prefer-native                  Use the native HLS downloader instead of ffmpeg
&ndash;hls-prefer-ffmpeg                  Use ffmpeg instead of the native HLS downloader
&ndash;hls-use-mpegts                     Use the mpegts container for HLS videos, allowing to play the video while
downloading (some players may not be able to play it)
&ndash;external-downloader COMMAND        Use the specified external downloader. Currently supports
aria2c,avconv,axel,curl,ffmpeg,httpie,wget
&ndash;external-downloader-args ARGS      Give these arguments to the external downloader</p>
<p>Filesystem Options:
-a, &ndash;batch-file FILE                File containing URLs to download (&rsquo;-&rsquo; for stdin), one URL per line. Lines
starting with &lsquo;#&rsquo;, &lsquo;;&rsquo; or &lsquo;]&rsquo; are considered as comments and ignored.
&ndash;id                                 Use only video ID in file name
-o, &ndash;output TEMPLATE                Output filename template, see the &ldquo;OUTPUT TEMPLATE&rdquo; for all the info
&ndash;output-na-placeholder PLACEHOLDER  Placeholder value for unavailable meta fields in output filename template
(default is &ldquo;NA&rdquo;)
&ndash;autonumber-start NUMBER            Specify the start value for %(autonumber)s (default is 1)
&ndash;restrict-filenames                 Restrict filenames to only ASCII characters, and avoid &ldquo;&amp;&rdquo; and spaces in
filenames
-w, &ndash;no-overwrites                  Do not overwrite files
-c, &ndash;continue                       Force resume of partially downloaded files. By default, youtube-dl will resume
downloads if possible.
&ndash;no-continue                        Do not resume partially downloaded files (restart from beginning)
&ndash;no-part                            Do not use .part files - write directly into output file
&ndash;no-mtime                           Do not use the Last-modified header to set the file modification time
&ndash;write-description                  Write video description to a .description file
&ndash;write-info-json                    Write video metadata to a .info.json file
&ndash;write-annotations                  Write video annotations to a .annotations.xml file
&ndash;load-info-json FILE                JSON file containing the video information (created with the &ldquo;&ndash;write-info-
json&rdquo; option)
&ndash;cookies FILE                       File to read cookies from and dump cookie jar in
&ndash;cache-dir DIR                      Location in the filesystem where youtube-dl can store some downloaded
information permanently. By default $XDG_CACHE_HOME/youtube-dl or ~/.cache
/youtube-dl . At the moment, only YouTube player files (for videos with
obfuscated signatures) are cached, but that may change.
&ndash;no-cache-dir                       Disable filesystem caching
&ndash;rm-cache-dir                       Delete all filesystem cache files</p>
<p>Thumbnail Options:
&ndash;write-thumbnail                    Write thumbnail image to disk
&ndash;write-all-thumbnails               Write all thumbnail image formats to disk
&ndash;list-thumbnails                    Simulate and list all available thumbnail formats</p>
<p>Verbosity / Simulation Options:
-q, &ndash;quiet                          Activate quiet mode
&ndash;no-warnings                        Ignore warnings
-s, &ndash;simulate                       Do not download the video and do not write anything to disk
&ndash;skip-download                      Do not download the video
-g, &ndash;get-url                        Simulate, quiet but print URL
-e, &ndash;get-title                      Simulate, quiet but print title
&ndash;get-id                             Simulate, quiet but print id
&ndash;get-thumbnail                      Simulate, quiet but print thumbnail URL
&ndash;get-description                    Simulate, quiet but print video description
&ndash;get-duration                       Simulate, quiet but print video length
&ndash;get-filename                       Simulate, quiet but print output filename
&ndash;get-format                         Simulate, quiet but print output format
-j, &ndash;dump-json                      Simulate, quiet but print JSON information. See the &ldquo;OUTPUT TEMPLATE&rdquo; for a
description of available keys.
-J, &ndash;dump-single-json               Simulate, quiet but print JSON information for each command-line argument. If
the URL refers to a playlist, dump the whole playlist information in a single
line.
&ndash;print-json                         Be quiet and print the video information as JSON (video is still being
downloaded).
&ndash;newline                            Output progress bar as new lines
&ndash;no-progress                        Do not print progress bar
&ndash;console-title                      Display progress in console titlebar
-v, &ndash;verbose                        Print various debugging information
&ndash;dump-pages                         Print downloaded pages encoded using base64 to debug problems (very verbose)
&ndash;write-pages                        Write downloaded intermediary pages to files in the current directory to debug
problems
&ndash;print-traffic                      Display sent and read HTTP traffic
-C, &ndash;call-home                      Contact the youtube-dl server for debugging
&ndash;no-call-home                       Do NOT contact the youtube-dl server for debugging</p>
<p>Workarounds:
&ndash;encoding ENCODING                  Force the specified encoding (experimental)
&ndash;no-check-certificate               Suppress HTTPS certificate validation
&ndash;prefer-insecure                    Use an unencrypted connection to retrieve information about the video.
(Currently supported only for YouTube)
&ndash;user-agent UA                      Specify a custom user agent
&ndash;referer URL                        Specify a custom referer, use if the video access is restricted to one domain
&ndash;add-header FIELD:VALUE             Specify a custom HTTP header and its value, separated by a colon &lsquo;:&rsquo;. You can
use this option multiple times
&ndash;bidi-workaround                    Work around terminals that lack bidirectional text support. Requires bidiv or
fribidi executable in PATH
&ndash;sleep-interval SECONDS             Number of seconds to sleep before each download when used alone or a lower
bound of a range for randomized sleep before each download (minimum possible
number of seconds to sleep) when used along with &ndash;max-sleep-interval.
&ndash;max-sleep-interval SECONDS         Upper bound of a range for randomized sleep before each download (maximum
possible number of seconds to sleep). Must only be used along with &ndash;min-sleep-
interval.</p>
<p>Video Format Options:
-f, &ndash;format FORMAT                  Video format code, see the &ldquo;FORMAT SELECTION&rdquo; for all the info
&ndash;all-formats                        Download all available video formats
&ndash;prefer-free-formats                Prefer free video formats unless a specific one is requested
-F, &ndash;list-formats                   List all available formats of requested videos
&ndash;youtube-skip-dash-manifest         Do not download the DASH manifests and related data on YouTube videos
&ndash;merge-output-format FORMAT         If a merge is required (e.g. bestvideo+bestaudio), output to given container
format. One of mkv, mp4, ogg, webm, flv. Ignored if no merge is required</p>
<p>Subtitle Options:
&ndash;write-sub                          Write subtitle file
&ndash;write-auto-sub                     Write automatically generated subtitle file (YouTube only)
&ndash;all-subs                           Download all the available subtitles of the video
&ndash;list-subs                          List all available subtitles for the video
&ndash;sub-format FORMAT                  Subtitle format, accepts formats preference, for example: &ldquo;srt&rdquo; or
&ldquo;ass/srt/best&rdquo;
&ndash;sub-lang LANGS                     Languages of the subtitles to download (optional) separated by commas, use
&ndash;list-subs for available language tags</p>
<p>Authentication Options:
-u, &ndash;username USERNAME              Login with this account ID
-p, &ndash;password PASSWORD              Account password. If this option is left out, youtube-dl will ask
interactively.
-2, &ndash;twofactor TWOFACTOR            Two-factor authentication code
-n, &ndash;netrc                          Use .netrc authentication data
&ndash;video-password PASSWORD            Video password (vimeo, youku)</p>
<p>Adobe Pass Options:
&ndash;ap-mso MSO                         Adobe Pass multiple-system operator (TV provider) identifier, use &ndash;ap-list-mso
for a list of available MSOs
&ndash;ap-username USERNAME               Multiple-system operator account login
&ndash;ap-password PASSWORD               Multiple-system operator account password. If this option is left out, youtube-
dl will ask interactively.
&ndash;ap-list-mso                        List all supported multiple-system operators</p>
<p>Post-processing Options:
-x, &ndash;extract-audio                  Convert video files to audio-only files (requires ffmpeg/avconv and
ffprobe/avprobe)
&ndash;audio-format FORMAT                Specify audio format: &ldquo;best&rdquo;, &ldquo;aac&rdquo;, &ldquo;flac&rdquo;, &ldquo;mp3&rdquo;, &ldquo;m4a&rdquo;, &ldquo;opus&rdquo;, &ldquo;vorbis&rdquo;, or
&ldquo;wav&rdquo;; &ldquo;best&rdquo; by default; No effect without -x
&ndash;audio-quality QUALITY              Specify ffmpeg/avconv audio quality, insert a value between 0 (better) and 9
(worse) for VBR or a specific bitrate like 128K (default 5)
&ndash;recode-video FORMAT                Encode the video to another format if necessary (currently supported:
mp4|flv|ogg|webm|mkv|avi)
&ndash;postprocessor-args ARGS            Give these arguments to the postprocessor
-k, &ndash;keep-video                     Keep the video file on disk after the post-processing; the video is erased by
default
&ndash;no-post-overwrites                 Do not overwrite post-processed files; the post-processed files are overwritten
by default
&ndash;embed-subs                         Embed subtitles in the video (only for mp4, webm and mkv videos)
&ndash;embed-thumbnail                    Embed thumbnail in the audio as cover art
&ndash;add-metadata                       Write metadata to the video file
&ndash;metadata-from-title FORMAT         Parse additional metadata like song title / artist from the video title. The
format syntax is the same as &ndash;output. Regular expression with named capture
groups may also be used. The parsed parameters replace existing values.
Example: &ndash;metadata-from-title &ldquo;%(artist)s - %(title)s&rdquo; matches a title like
&ldquo;Coldplay - Paradise&rdquo;. Example (regex): &ndash;metadata-from-title &ldquo;(?P<!-- raw HTML omitted -->.+?)
- (?P<!-- raw HTML omitted -->.+)&rdquo;
&ndash;xattrs                             Write metadata to the video file&rsquo;s xattrs (using dublin core and xdg standards)
&ndash;fixup POLICY                       Automatically correct known faults of the file. One of never (do nothing), warn
(only emit a warning), detect_or_warn (the default; fix file if we can, warn
otherwise)
&ndash;prefer-avconv                      Prefer avconv over ffmpeg for running the postprocessors
&ndash;prefer-ffmpeg                      Prefer ffmpeg over avconv for running the postprocessors (default)
&ndash;ffmpeg-location PATH               Location of the ffmpeg/avconv binary; either the path to the binary or its
containing directory.
&ndash;exec CMD                           Execute a command on the file after downloading and post-processing, similar to
find&rsquo;s -exec syntax. Example: &ndash;exec &lsquo;adb push {} /sdcard/Music/ &amp;&amp; rm {}&rsquo;
&ndash;convert-subs FORMAT                Convert the subtitles to other format (currently supported: srt|ass|vtt|lrc)</p>
<p>.\youtube-dl.exe &ndash;proxy &ldquo;socks5://127.0.0.1:60000/&rdquo; &ndash;verbose <a href="https://www.youtube.com/watch?v=bqu6BquVi2M">https://www.youtube.com/watch?v=bqu6BquVi2M</a></p>
<p>.\youtube-dl.exe &ndash;verbose <a href="https://www.youtube.com/watch?v=bqu6BquVi2M">https://www.youtube.com/watch?v=bqu6BquVi2M</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://sharperM.GitHub.io/zh-cn/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/1/01/01/</guid>
      <description>https://github.com/assimon/dujiaoka 卡密网页 开源的 例子 售卖 openai 的账号 https://shop.yiios.com/ https://ai.yiios.com/</description>
      <content:encoded><![CDATA[<p><a href="https://github.com/assimon/dujiaoka">https://github.com/assimon/dujiaoka</a></p>
<p>卡密网页 开源的</p>
<p>例子 售卖 openai 的账号</p>
<p><a href="https://shop.yiios.com/">https://shop.yiios.com/</a>
<a href="https://ai.yiios.com/">https://ai.yiios.com/</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://sharperM.GitHub.io/zh-cn/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/1/01/01/</guid>
      <description>如何专注 1.为什么分心？ 1.外部因素，例如，环境嘈杂，其他打扰， 2.内部因素，人会逃避那些自己感到不舒服的东西。 1.任务要求太高，例如本来每</description>
      <content:encoded><![CDATA[<p>如何专注</p>
<h1 id="1为什么分心">1.为什么分心？</h1>
<h2 id="1外部因素例如环境嘈杂其他打扰">1.外部因素，例如，环境嘈杂，其他打扰，</h2>
<h2 id="2内部因素人会逃避那些自己感到不舒服的东西">2.内部因素，人会逃避那些自己感到不舒服的东西。</h2>
<h3 id="1任务要求太高例如本来每天完成10件工作的你能完美的做好-老板就将任务不断增加直到你手忙脚乱做不完为之这个可以通过将任务降低解决保持自己的节奏">1.任务要求太高，例如本来每天完成10件工作的，你能完美的做好， 老板就将任务不断增加，直到你手忙脚乱，做不完为之。这个可以通过将任务降低解决。（保持自己的节奏）</h3>
<h3 id="2孤独无聊疲累--2种办法解决问题-或-适应这些问题">2.孤独，无聊，疲累，  2种办法，解决问题 或 适应这些问题</h3>
<h4 id="1注意感觉主要自己对这些不舒服的感受描述这些不舒服的感受">1.注意感觉，主要自己对这些不舒服的感受，描述这些不舒服的感受。</h4>
<h4 id="2对这些不舒服保持好奇心而不是忽视它要想为什么会这样">2.对这些不舒服，保持好奇心。而不是忽视它。要想为什么会这样？</h4>
<h4 id="3-习惯这些不适">3. 习惯这些不适。</h4>
<h5 id="1在10分钟内允许自己分散注意力做自己想放松的其他事之后就要专注做重要的事">1.在10分钟内，允许自己分散注意力。做自己想放松的其他事，之后就要专注做重要的事。</h5>
<h1 id="2怎样知道自己有没有分心做其他事">2.怎样知道自己有没有分心做其他事？</h1>
<h2 id="1提前定计划明确做什么事情和什么时候开始做安排自己的时间">1.提前定计划，明确做什么事情和什么时候开始做。安排自己的时间。</h2>
<h2 id="heading"></h2>
<h2 id="远离低价值的工作read-e-mail-many-time">远离低价值的工作，（read e-mail many time）</h2>
<h2 id="检查手机的通知看看那些消息是你正在需要的是他们服务于你而不是你服务于他的将不重要的通知去掉">检查手机的通知。看看那些消息是你正在需要的，是他们服务于你而不是你服务于他的。将不重要的通知去掉。</h2>
<h2 id="减少干扰-手机的forst--time-gudige">减少干扰， 手机的forst ， time gudige</h2>
<h1 id="将时间留给你最重要的人亲人朋友伙伴">将时间留给你最重要的人。亲人，朋友，伙伴</h1>
<h2 id="剩余的捐助者residual-benefactors">剩余的捐助者，residual benefactors</h2>
<h2 id="计划的时间按重要有3层第一就是-自己保持健康和专注照顾好自己就不至于拖累最重要的人第二就是自己最重要的人第三就是工作专业">计划的时间按重要有3层，第一就是 自己，保持健康和专注，照顾好自己就不至于拖累最重要的人，第二就是，自己最重要的人。第三就是工作，专业。</h2>
<h3 id="保持足够的睡眠有足够的学习提升得到相应的娱乐运动丰富自己的生活">保持足够的睡眠，有足够的学习提升，得到相应的娱乐，运动，丰富自己的生活。</h3>
<h3 id="和家人相处的时间">和家人相处的时间。</h3>
<h3 id="工作">工作</h3>
<h1 id="多任务">多任务</h1>
<h2 id="1脑力活动和-体力活动可用同时进行">1.脑力活动和 体力活动可用同时进行。</h2>
<h1 id="总结怎样专注">总结怎样专注</h1>
<h1 id="管理内部触发器使你分心的内部原因">管理内部触发器(使你分心的内部原因)</h1>
<h1 id="安排时间用来专注">安排时间用来专注</h1>
<h1 id="破解外部触发器">破解外部触发器</h1>
<h1 id="用工具减少分心">用工具减少分心</h1>
<h1 id="要相信自己有能力做到">要相信自己有能力做到。</h1>
]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://sharperM.GitHub.io/zh-cn/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/1/01/01/</guid>
      <description>音标：《赖世雄美语音标》 语法：https://www.zhihu.com/question/30030877/answer/76850196</description>
      <content:encoded><![CDATA[<p>音标：《赖世雄美语音标》
语法：https://www.zhihu.com/question/30030877/answer/768501967</p>
<p>语言交换网站 <a href="https://language.exchange">https://language.exchange</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://sharperM.GitHub.io/zh-cn/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/1/01/01/</guid>
      <description></description>
      <content:encoded><![CDATA[]]></content:encoded>
    </item>
    
    <item>
      <title></title>
      <link>https://sharperM.GitHub.io/zh-cn/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sharperM.GitHub.io/zh-cn/1/01/01/</guid>
      <description>find / -name .git 2&amp;gt;&amp;amp;1 | grep -v &amp;lsquo;Permission denied&amp;rsquo;</description>
      <content:encoded><![CDATA[<p>find /  -name .git 2&gt;&amp;1  | grep -v &lsquo;Permission denied&rsquo;</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>